{"version":3,"sources":["themes/index.js","components/layout/NavBar.jsx","components/basic/Caption.jsx","components/basic/HotelCard.jsx","components/composed/HotelList.jsx","components/layout/Main.jsx","components/layout/SideBar.jsx","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","React","createContext","ThemeProvider","Provider","require","API_URL","API_KEY","NavBar","queryStr","onSelect","currTheme","setTheme","theme","useContext","useState","cities","setCities","search","setSearch","loading","setLoading","iconHovered","setIconHovered","toggleHovered","fetchCities","a","console","log","endPoint","fetch","headers","response","status","error","json","location_suggestions","useEffect","city","find","name","clearTimeout","window","timer","className","style","backgroundColor","color","border","onMouseOver","placeholder","value","onChange","event","target","setTimeout","id","list","autoComplete","map","key","onMouseLeave","onClick","Caption","props","children","PRICE_BG_LIST","HotelCard","hover","setHover","backgroundImg","hotel","restaurant","thumb","featured_image","priceBg","price_range","backgroundImage","backgroundSize","cuisines","user_rating","rating_color","aggregate_rating","currency","SORT_OPTIONS","FILTERS","has_table_booking","has_online_delivery","is_delivering_now","is_table_reservation_supported","HotelList","initialHotels","results_found","setRestaurant","hotels","setHotels","sortBy","setSortBy","isAsc","setIsAsc","filters","setFilters","sortHotels","filteredHotels","hotelList","sort","b","filterHotels","filteredList","forEach","filter","elem","length","Object","keys","Fragment","newFilters","includes","push","toggleFilter","option","index","reverse","handleSort","textTransform","Main","numOfResults","setNumOfResults","start","setStart","isLoading","setIsLoading","fetchHotels","reset","concat","restaurants","then","SideBar","visible","setVisible","dishes","setDishes","fetchMenu","daily_menus","daily_menu","err","INFO_ROWS","average_cost_for_two","timings","location","address","locality","phone_numbers","right","width","height","dish","price","THEMES","App","setCity","themeData","setThemeData","background","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5cf0666c.chunk.js","sourcesContent":["import React from 'react';\n\nconst ThemeContext = React.createContext({});\n\nexport const ThemeProvider = ThemeContext.Provider;\n\nexport default ThemeContext;","// import React, { useState, useEffect } from \"react\";\n// import \"./NavBar.css\";\n\n// function NavBar(props) {\n//   const [cities, setCities] = useState([]);\n//   const [search, setSearch] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const loadCities = (event) => {\n// \t  const selectedCity = cities.find(city => \n// \t\tcity.name === event.target.value\n//     );\n    \n//     setLoading(true);\n\n// \t\tif(selectedCity) {\n//       props.onSelect(selectedCity);\n//       setSearch(selectedCity.name);\n//       setLoading(false);\n// \t\t} else {\n\n//       clearTimeout(window.timer);\n//       setSearch(event.target.value);\n// \t    window.timer = setTimeout(loadData, 1000);\n//     }\n\n//   } \n\n//   const loadData = () => {\n//     setCities([]);\n// \t  //Fetching the city list\n// \t  const apiUrl = \"https://developers.zomato.com/api/v2.1/cities?q=\" + search;\n// \tfetch(apiUrl, {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"user-key\": \"3eb58604156a83e4cd688c6778e7d259\",\n//       },\n//     }).then((response) => {\n//       if (response.status === 200) {\n//         response\n//           .json()\n//           .then((response) => {\n//             setCities(response.location_suggestions)\n//           });\n//           setLoading(false);\n//       } else {\n//         console.log(\"Couldnt connect to Zomato\");\n//       }\n//   });\n// }\n\n//   const printHello = () => {\n// \t  console.log(\"OK\");\n//   }\n \n//   return (\n//     <div className=\"nav-container\">\n//       <h1 className=\"logo\">\n//         find<span className=\"sep\">food</span>\n//       </h1>\n\n//       <div className=\"search-wrapper\">\n//       <i className={loading? \"fa fa-circle-notch fa-spin\" :\"fa fa-search\"}></i>\n//       <input\n//         className=\"search\"\n// \t\tplaceholder=\"Search for cities\"\n// \t\tvalue={search}\n// \t\tonChange={loadCities}\n// \t\tid=\"city-input\"\n//         list=\"city-list\"\n//         autoComplete=\"off\"\n//       />\n//       </div>\n     \n//       {cities && (\n//         <datalist id=\"city-list\">\n//           {cities.map((city) => (\n//             <option value={city.name} key={city.id} />\n//           ))}\n//         </datalist>\n//       )}\n\n//       <div></div>\n//     </div>\n//   );\n// }\n\n// export default NavBar;\nimport React, { useState, useEffect, useContext } from 'react';\nimport './NavBar.css';\nimport ThemeContext from '../../themes';\n\nconst { API_URL, API_KEY } = require('../../config.json');\n\nfunction NavBar({ onSelect, currTheme, setTheme }) {\n  let queryStr;\n\n  const theme = useContext(ThemeContext);\n\n  const [ cities, setCities ] = useState([]);\n  const [ search, setSearch ] = useState(\"Trivandrum\");\n  const [ loading, setLoading ] = useState(false);\n  const [ iconHovered, setIconHovered ] = useState(false);\n\n  const toggleHovered = () => setIconHovered(!iconHovered);\n\n  const fetchCities = async () => {\n    setCities([]);\n    console.log(\"Load start for \" + queryStr)\n    const endPoint = `cities?q=${queryStr}`;\n    const response = await fetch(API_URL + endPoint, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"user-key\": API_KEY\n      }\n    });\n\n    setLoading(false);\n    if(response.status !== 200) {\n      // TODO: Show Error Message\n      console.error(\"Could not connect to Zomato API\");\n      return;\n    }\n\n    const json = await response.json();\n    console.log(\"Load end for \" + search)\n    console.log(json);\n    setCities(json.location_suggestions);\n  }\n\n  const handleChange = event => {\n    clearTimeout(window.timer);\n    if(cities.find(city => city.name === search)) {\n      return;\n    }\n    setLoading(true);\n    setSearch(event.target.value);\n    queryStr = event.target.value;\n    window.timer = setTimeout(fetchCities, 300);\n  }\n\n  useEffect(() => {\n    let city;\n\n    if(city = cities.find(city => city.name === search)) {\n      onSelect(city);\n      clearTimeout(window.timer);\n      setCities([]);\n    }\n  }, [cities]);\n\n  return (\n    <div className=\"nav-container\" style={{backgroundColor: theme['nav-bg']}}>\n      <h1 className=\"logo\" style={{color: theme['nav-color']}}>\n        find<span style={{color: theme['primary-color']}}>food</span>\n      </h1>\n\n      <div className=\"search-wrapper\" style={{\n            border: `2px solid ${theme['nav-color']}`}}>\n        <i \n          className={`fa ${loading? \"fa-circle-notch fa-spin\": \"fa-search\"}`} \n          onMouseOver={() => {}}\n          style={{ color: theme['nav-color']}}\n        />\n        <input\n          className=\"search\"\n          placeholder=\"Search for cities\"\n          value={search}\n          onChange={handleChange}\n          id=\"city-input\"\n          list=\"city-list\"\n          autoComplete=\"off\"\n          style={{ \n            color: theme['nav-color']\n          }}\n        />\n      </div>\n\n      {cities && (\n        <datalist id=\"city-list\">\n          {cities.map(city => <option value={city.name} key={city.id}/>)}\n        </datalist>\n      )}\n\n      <div className=\"theme-icon\" style={{ color: theme['nav-color'] }}>\n        <i\n          onMouseOver={toggleHovered}\n          onMouseLeave={toggleHovered} \n          className={`fa ${iconHovered && \"fa-spin\"} ${currTheme == 'light'? 'fa-moon': 'fa-sun'}`}\n          onClick={() => {\n            let theme = \"light\";\n            if(currTheme == \"light\")\n              theme = \"dark\";\n\n            setTheme(theme);\n          }}\n        ></i>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;","import React, { useContext } from 'react';\nimport './Caption.css';\nimport ThemeContext from '../../themes';\n\nfunction Caption(props) {\n\tconst theme = useContext(ThemeContext);\n\n\treturn (\n\t\t<span \n\t\t\tclassName={\"caption-text \" + props.className} \n\t\t\tstyle={{ color: props.color || theme['secondary-caption']}}\n\t\t>\n\t\t\t{props.children}\n\t\t</span>\n\t);\n}\n\nexport default Caption;","import React, { useContext, useState } from 'react';\nimport './HotelCard.css';\nimport Caption from '../basic/Caption';\nimport ThemeContext from '../../themes';\n\nconst PRICE_BG_LIST = [\"#c0392b\", \"#e67e22\", \"#f1c40f\", \"#2ecc71\"];\n\nfunction HotelCard(props) {\n\tconst theme = useContext(ThemeContext);\n\tconst [ hover, setHover ] = useState(false);\n\n\tconst backgroundImg = props.hotel.restaurant.thumb || props.hotel.restaurant.featured_image || \"https://via.placeholder.com/300\";\n\tconst priceBg = PRICE_BG_LIST[4 - props.hotel.restaurant.price_range] || \"gray\";\n\n\treturn (\n\t\t<div \n\t\t\tclassName=\"item-wrapper\"\n\t\t\tonMouseOver={() => setHover(true)}\n\t\t\tonMouseLeave={() => setHover(false)}\n\t\t\tstyle={{\n\t\t\t\tborder: hover? theme['card-hover-border']: theme['card-border'],\n\t\t\t}}\n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t<div className=\"list-item\">\n\t\t\t<div className=\"img\" style={{ backgroundImage: \"url(' \" + backgroundImg + \"')\", backgroundSize: \"cover\"}} />\n\t\t\t<h2>{props.hotel.restaurant.name}</h2>\n\t\t\t<div className=\"center\">\n\t\t\t<Caption color={theme['primary-caption']}>{props.hotel.restaurant.cuisines}</Caption>\n\t\t\t</div>\n\t\t\t<div className=\"center\">\n\t\t\t{props.hotel.restaurant.user_rating && \n\t\t\t<span className=\"stars\" style={{color: \"#\" + props.hotel.restaurant.user_rating.rating_color}}>\n\t\t\t\t<i className=\"fa fa-star\">\n\t\t\t\t</i>\n\t\t\t\t{props.hotel.restaurant.user_rating.aggregate_rating}\n\t\t\t</span> }\n\t\t\t<span className=\"price-range\" style={{ color: priceBg}}>\n\t\t\t\t<i className=\"fa\">{props.hotel.restaurant.currency}</i>\n\t\t\t\t{props.hotel.restaurant.price_range}x\n\t\t\t</span>\n\t\t\t</div>\n\t\t\t\n\n\n\t\t\n{/* \t\t\t\t\n\n\t{\n\t\tprops.hotel.restaurant.location &&\n\t\n\t\t\t<div className=\"address\">\n\t\t\t\t{props.hotel.restaurant.location.address}<br/>\n\t\t\t\t{props.hotel.restaurant.location.locality}<br/>\n<i className=\"fa fa-phone-alt\" />{props.hotel.restaurant.phone_numbers}\n\t\t\t</div>\n\n} */}\n\n\t\t</div>\n\t\t</div>\n\t);\n\t\t\n}\n\nexport default HotelCard;","import React, { useState, useEffect } from 'react';\nimport './HotelList.css';\n\nimport Caption from '../basic/Caption';\nimport HotelCard from '../basic/HotelCard';\n\nconst SORT_OPTIONS = [\"name\", \"price\", \"rating\"];\nconst FILTERS = {\n  has_table_booking: \"Table Booking\",\n  has_online_delivery: \"Online Delivery\",\n  is_delivering_now: \"Delivering Now\",\n  is_table_reservation_supported: \"Reservation\"\n}\n\nfunction HotelList({ initialHotels, results_found, setRestaurant }) {\n  const [ hotels, setHotels ] = useState([]);\n  const [ sortBy, setSortBy ] = useState(null);\n  const [ isAsc, setIsAsc ] = useState(false);\n  const [ filters, setFilters ] = useState([]);\n\n  const sortHotels = filteredHotels => {\n    setIsAsc(false);\n    const hotelList = filteredHotels || [...hotels];\n\n    switch(SORT_OPTIONS[sortBy]) {\n      case \"name\":\n        hotelList.sort((a, b) => \n          a.restaurant.name > b.restaurant.name ? 1: -1\n        );\n        break;\n\n      case \"price\":\n        hotelList.sort((a, b) => \n          a.restaurant.price_range - b.restaurant.price_range\n        );\n        break;\n\n      case \"rating\":\n        hotelList.sort((a, b) => \n          a.restaurant.user_rating.aggregate_rating -\n          b.restaurant.user_rating.aggregate_rating\n        );\n        break;\n    }\n\n    setHotels(hotelList);\n  }\n\n  const filterHotels = () => {\n    let filteredList = [...initialHotels];\n\n    filters.forEach(filter => {\n      filteredList = filteredList.filter(elem => elem.restaurant[filter]);\n    });\n\n    sortHotels(filteredList);\n  }\n  \n  const toggleFilter = filter => {\n    let newFilters = [...filters];\n\n    if(filters.includes(filter)) {\n      newFilters = newFilters.filter(elem => elem !== filter);\n      setFilters(newFilters);\n      return;\n    }\n\n    newFilters.push(filter);\n    setFilters(newFilters);\n  }\n\n  const handleSort = index => {\n    if(sortBy === index) {\n      setHotels([...hotels].reverse());\n      setIsAsc(!isAsc);\n      return;\n    }\n\n    setSortBy(index);\n  }\n\n  // The original hotels list is not touched as we may\n  // need it when the page is filtered or sorted\n  useEffect(() => {\n    filterHotels(initialHotels);\n  }, [initialHotels]);\n\n  useEffect(() => sortHotels(), [sortBy]);  \n\n  useEffect(() => filterHotels(), [filters]);\n\n  return (\n    <div className=\"list-body\">\n      <div className=\"list-control\">\n        <Caption className=\"left\">\n          {hotels.length} Results Shown ({results_found} Found)\n        </Caption>\n\n        <Caption className=\"right\">\n          Filter:&nbsp;\n          {Object.keys(FILTERS).map(key => (\n            <React.Fragment key={key}>\n              <button onClick={() => toggleFilter(key)}>\n                {FILTERS[key]}\n                {filters.includes(key) && <i className=\"fa fa-times\" />}\n              </button>\n              &nbsp;/&nbsp; \n            </React.Fragment>\n          ))}\n        </Caption>\n\n        <Caption className=\"center\">\n          Sort by:&nbsp;\n          {SORT_OPTIONS.map((option, index) => (\n            <React.Fragment key={index}>\n              <button \n                onClick={() => handleSort(index)} \n                style={{textTransform: \"capitalize\"}}\n              >\n                {option}\n                {sortBy === index && <i className={`fa fa-arrow-${isAsc? 'down': 'up'}`} />}\n              </button>\n              &nbsp;/&nbsp;\n            </React.Fragment>\n          ))}\n        </Caption>\n      </div>\n\n      <div className=\"items-wrapper\">\n        {hotels.map((hotel, index) => (\n          <HotelCard \n            hotel={hotel} \n            key={index} \n            onClick={() => setRestaurant(hotel)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default HotelList;","import React, { useState, useEffect } from 'react';\nimport HotelList from '../composed/HotelList';\nimport './Main.css';\n\nconst { API_URL, API_KEY } = require('../../config.json');\n\nfunction Main({ city, setRestaurant }) {\n  const [ hotels, setHotels ] = useState([]);\n  const [ numOfResults, setNumOfResults ] = useState(0);\n  const [ start, setStart ] = useState(0);\n  const [ isLoading, setIsLoading ] = useState(false);\n\n  const fetchHotels = async reset => {\n    const endPoint = `search?entity_type=city&entity_id=${city.id}&start=${start}`;\n    const response = await fetch(API_URL + endPoint, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"user-key\": API_KEY\n      }\n    });\n\n    if(response.status !== 200) {\n      // TODO: Show Error Message\n      console.error(\"Could not connect to Zomato API\");\n      return;\n    }\n\n    const json = await response.json();\n\n    setNumOfResults(json.results_found);\n    if(! reset) {\n      setHotels(hotels.concat(json.restaurants));\n      return;\n    }\n\n    setHotels(json.restaurants);\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    setHotels([]);\n    fetchHotels(true).then(() => setIsLoading(false));\n  }, [city]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchHotels().then(() => setIsLoading(false));\n  }, [start]);\n\n  return(\n    <div className=\"main-body\">\n      <HotelList \n        initialHotels={hotels} \n        results_found={numOfResults}\n        setRestaurant={setRestaurant} \n      />\n      <button \n        className=\"load\"\n        onClick={() => setStart(start+20)}\n      >\n        {!isLoading\n          ? <><i className=\"fa fa-arrow-down\" /> Load More</>\n          : <><i className=\"fa fa-circle-notch fa-spin\" /> Loading</>\n        }\n      </button>\n    </div>\n  );\n}\n\nexport default Main;","import React, { useContext, useState, useEffect } from 'react';\nimport './SideBar.css';\nimport ThemeContext from '../../themes';\nimport Caption from '../basic/Caption';\n\nconst { API_URL, API_KEY } = require('../../config.json');\n\nfunction SideBar({ restaurant, setRestaurant }) {\n\tconst theme = useContext(ThemeContext);\n\tconst [ visible, setVisible ] = useState(false);\n\tconst [ loading, setLoading ] = useState(true);\n\tconst [ dishes, setDishes ] = useState([]);\n\n\tconst fetchMenu = async () => {\n\t\tconst endPoint = `dailymenu?res_id=${restaurant?.id}`;\n\t\tconst response = await fetch(API_URL + endPoint, {\n\t\t\theaders: {\n\t\t\t  \"Content-Type\": \"application/json\",\n\t\t\t  \"user-key\": API_KEY\n\t\t\t}\n\t\t  });\n\t\t  \n\t\t  setLoading(false);\n\t\t  if(response.status !== 200) {\n\t\t\t// TODO: Show Error Message\n\t\t\tconsole.error(\"Could not connect to Zomato API\");\n\t\t\treturn;\n\t\t  }\n\t  \n\t\t  const json = await response.json();\n\t\t  try {\n\t\t\t  setDishes(json.daily_menus[0].daily_menu.dishes);\n\t\t  } catch(err) {\n\t\t\t  console.log(\"No menus provided\");\n\t\t  }\n\t}\n\t\n\tuseEffect(() => {\n\t\tif(! restaurant)\n\t\t\treturn;\n\n\t\tsetVisible(true);\n\t\tsetLoading(true);\n\t\tsetDishes([]);\n\t\tfetchMenu();\n\t}, [restaurant]);\n\t\n\trestaurant = restaurant?.restaurant;\n\tconsole.log(restaurant);\n\n\tconst INFO_ROWS = {\n\t\t\"fa-dollar\": `${restaurant?.currency} ${restaurant?.average_cost_for_two} (for two)`,\n\t\t\"fa-clock\": restaurant?.timings,\n\t\t\"fa-map-marker\": restaurant?.location.address,\n\t\t\"fa-map\": restaurant?.location.locality,\n\t\t\"fa-phone-alt\": restaurant?.phone_numbers\n\t}\n\n\treturn (\n\t\t<div \n\t\t\tclassName=\"sideBar\"\n\t\t\tstyle={{\n\t\t\t\tright: `${visible? \"0px\": \"-600px\"}`,\n\t\t\t\tbackgroundColor: theme['side-bg']\n\t\t\t}}\n\t\t>\n\t\t\t<h1>\n\t\t\t\t<i className=\"fa fa-times\" onClick={() => {\n\t\t\t\t\tsetRestaurant({});\n\t\t\t\t\tsetVisible(false);\n\t\t\t\t}} />\n\t\t\t\t{restaurant?.name}\n\t\t\t</h1>\n\n\t\t\t<div\n\t\t\t\tclassName=\"img\" \n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url('${restaurant?.featured_image || restaurant?.thumb || \"https://via.placeholder.com/350\"}')`,\n\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t\twidth: \"350px\",\n\t\t\t\t\theight: \"350px\"\n\t\t\t\t}} \n\t\t\t/>\n\n\t\t\t<Caption className=\"caption\">\n\t\t\t\t{restaurant?.cuisines}\n\t\t\t</Caption>\n\t\t\t\n\t\t\t<h3>Info</h3>\n\t\t\t<div className=\"info\">\n\t\t\t\t{Object.keys(INFO_ROWS).map(key => (\n\t\t\t\t\t<span className=\"info-row\">\n\t\t\t\t\t\t<span className=\"icon\"><i className={`fa ${key}`} /></span>\n\t\t\t\t\t\t<span className=\"value\">{INFO_ROWS[key]}</span>\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t<h3>Menu</h3>\n\t\t\t<div className=\"dishes\">\n\t\t\t\t{loading\n\t\t\t\t\t? <div className=\"loading\" style={{color: \"green\"}} >\n\t\t\t\t\t\t<i \n\t\t\t\t\t\t\tclassName=\"fa fa-circle-notch fa-spin\"\n\t\t\t\t\t\t/> Fetching Menu\n\t\t\t\t\t</div>\n\t\t\t\t\t: (! dishes.length) \n\t\t\t\t\t\t? <p className=\"alert\" style={{color: theme['alert-color']}}>\n\t\t\t\t\t\t\tThe restaurant hasn't provided an online menu\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t: dishes.map(dish => (\n\t\t\t\t\t\t\t<div className=\"dish-row\">\n\t\t\t\t\t\t\t\t<span className=\"dish-name\">{dish.dish.name}</span>\n\t\t\t\t\t\t\t\t<span className=\"dish-price\">{dish.dish.price}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default SideBar;","import React, { useState, useEffect } from 'react';\nimport { NavBar, Main, SideBar } from './components/layout/';\nimport { ThemeProvider } from './themes';\n\nconst THEMES = require('./themes/themes.json'); \n\nfunction App() {\n  const [ city, setCity ] = useState({\n      \"name\": \"Trivandrum\",\n      \"id\": 11290\n  });\n  const [ theme, setTheme ] = useState(\"light\");\n  const [ themeData, setThemeData ] = useState({});\n  const [ restaurant, setRestaurant ] = useState({});\n\n  useEffect(() => {\n    setThemeData(THEMES[theme]);\n  }, [theme]);\n\n  return (\n    <div \n      className=\"App\"\n      style={{\n        background: themeData['primary-bg'],\n        color: themeData['primary-fg']\n      }}\n    >\n      <ThemeProvider value={themeData}>\n        <NavBar \n          onSelect={setCity} \n          currTheme={theme}\n          setTheme={setTheme} \n        />\n        <Main \n          city={city}\n          setRestaurant={setRestaurant}\n        />\n        <SideBar \n          restaurant={restaurant}\n          setRestaurant={setRestaurant} \n        />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}